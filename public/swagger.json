{
  "swagger": "2.0",
  "info": {
    "description": "This is a documentation for REST API Shop.",
    "version": "1.0.0",
    "title": "REST API Shop",
    "contact": {
      "name": "Peng Fluf",
      "url": "https://github.com/pengfluf",
      "email": "pengfluf@tutanota.com"
    },
    "license": {
      "name": "MIT"
    }
  },
  "host": "localhost:3002",
  "basePath": "/v2",
  "tags": [
    {
      "name": "User",
      "description": "Sign Up, Login, Delete Account"
    },
    {
      "name": "Products",
      "description": "Actions with products"
    },
    {
      "name": "Orders",
      "description": "Actions with orders related to specific products"
    }
  ],
  "schemes": ["http"],
  "paths": {
    "/user/signup": {
      "post": {
        "tags": ["User"],
        "summary": "Sign Up",
        "description": "",
        "operationId": "signup",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "email",
          "in": "body",
          "description": "User Email",
          "required": true,
          "type": "string"
        },
        {
          "name": "password",
          "in": "body",
          "description": "User Password",
          "required": true,
          "type": "string"
        }
      ],
        "responses": {
          "201": {
            "description": "Signed up successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "_id": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
              }
            }
          },
          "409": {
            "description": "This email address is already taken.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Signing up failed.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "error": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": ["User"],
        "summary": "Login",
        "description": "",
        "operationId": "login",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [{
          "name": "email",
          "in": "body",
          "description": "User Email",
          "required": true,
          "type": "string"
        },
        {
          "name": "password",
          "in": "body",
          "description": "User Password",
          "required": true,
          "type": "string"
        }
      ],
        "responses": {
          "200": {
            "description": "Authorized successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "token": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
    },
    "/user/{userID}": {
      "get": {
        "tags": ["User"],
        "summary": "Get Account Info",
        "description": "You can get account info if it's your account only.",
        "operationId": "getAccountInfo",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [{
          "api_key": []
        }],
        "responses": {
          "200": {
            "description": "Account info successfully received.",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
              },
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "Delete Account",
        "description": "",
        "operationId": "deleteAccount",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [{
          "api_key": []
        }],
        "responses": {
          "200": {
            "description": "Account successfully deleted.",
            "schema": {
              "type": "object",
              "properties": {
                "ok": {
                  "type": "integer",
                  "format": "int32"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
    },
    "/products": {
      "get": {
        "tags": ["Products"],
        "summary": "Get All Products",
        "description": "",
        "operationId": "getAllProducts",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "All products successfully received.",
            "schema": {
              "type": "object",
              "properties": {
                "productsAmount": {
                  "type": "integer",
                  "format": "int32"
                },
                "products": {
                  "type": "array",
                  "items": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Product"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "$ref": "#definitions/Request"
                            }
                          }
                        }
                      ],
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Products"],
        "summary": "Create Product",
        "description": "",
        "operationId": "createProduct",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "security": [{
          "api_key": []
        }],
        "parameters": [{
          "name": "name",
          "in": "body",
          "description": "Product Name",
          "required": true,
          "type": "string"
        },
        {
          "name": "price",
          "in": "body",
          "description": "Product Price",
          "required": true,
          "type": "integer",
          "format": "int32"
        },
        {
          "name": "productImage",
          "in": "body",
          "description": "Product Image",
          "required": false,
          "type": "string"
        }
      ],
        "responses": {
          "201": {
            "description": "Product successfully created",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Product"
                },
                {
                  "type": "object",
                  "properties": {
                    "request": {
                      "$ref": "#definitions/Request"
                    }
                  }
                }
              ]
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/products/{productID}": {
      "get": {
        "tags": ["Products"],
        "summary": "Get Product",
        "description": "",
        "operationId": "getProduct",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Product successfully received.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Product"
                },
                {
                  "type": "object",
                  "properties": {
                    "request": {
                      "$ref": "#definitions/Request"
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "There's no such product.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
              },
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Products"],
        "summary": "Update Product",
        "description": "",
        "operationId": "updateProduct",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [{
          "api_key": []
        }],
        "parameters": [{
          "name": "name",
          "in": "body",
          "description": "Product Name",
          "required": false,
          "type": "string"
        },
        {
          "name": "price",
          "in": "body",
          "description": "Product Price",
          "required": false,
          "type": "integer",
          "format": "int32"
        },
        {
          "name": "productImage",
          "in": "body",
          "description": "Product Image",
          "required": false,
          "type": "string"
        }
      ],
        "responses": {
          "200": {
            "description": "Product successfully updated.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "message": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "request": {
                      "$ref": "#definitions/Request"
                    }
                  }
                }
              ]
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Products"],
        "summary": "Delete Product",
        "description": "",
        "operationId": "deleteProduct",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [{
          "api_key": []
        }],
        "responses": {
          "200": {
            "description": "Product successfully deleted.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "message": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "request": {
                      "$ref": "#definitions/Request"
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Product with this ID doesn't exist.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
              },
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get All Orders",
        "description": "",
        "operationId": "getAllOrders",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [{
          "api_key": []
        }],
        "responses": {
          "200": {
            "description": "All orders successfully received.",
            "schema": {
              "type": "object",
              "properties": {
                "ordersAmount": {
                  "type": "integer",
                  "format": "int32"
                },
                "orders": {
                  "type": "array",
                  "items": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/Order"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "request": {
                              "$ref": "#definitions/Request"
                            }
                          }
                        }
                      ],
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Orders"],
        "summary": "Create order",
        "description": "",
        "operationId": "createProduct",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [{
          "api_key": []
        }],
        "parameters": [{
          "name": "productID",
          "in": "body",
          "description": "Product ID",
          "required": true,
          "type": "string"
        },
        {
          "name": "quantity",
          "in": "body",
          "description": "Product Quantity",
          "required": false,
          "type": "integer",
          "format": "int32",
          "default": 1
        }
      ],
        "responses": {
          "201": {
            "description": "Order successfully created.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                    },
                    "_id": {
                      "type": "string"
                    },
                    "quantity": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "product": {
                      "type": "string",
                      "description": "Product ID which this order related to."
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "request": {
                      "$ref": "#definitions/Request"
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Product with this ID doesn't exist.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
              },
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{orderID}": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get Order",
        "description": "",
        "operationId": "getOrder",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [{
          "api_key": []
        }],
        "responses": {
          "200": {
            "description": "Order successfully received.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Order"
                },
                {
                  "type": "object",
                  "properties": {
                    "request": {
                      "$ref": "#definitions/Request"
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Order with this ID doesn't exist.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
              },
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Orders"],
        "summary": "Delete Order",
        "description": "",
        "operationId": "deleteOrder",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "security": [{
          "api_key": []
        }],
        "responses": {
          "200": {
            "description": "Order successfully deleted.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "ok": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "message": {
                      "type": "string"
                    },
                    "_id": {
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "request": {
                      "$ref": "#definitions/Request"
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Order with this ID doesn't exist.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
              },
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "Product": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "integer",
          "format": "int32"
        },
        "productImage": {
          "type": "string"
        },
      },
      "required": [
        "name",
        "price"
      ]
    },
    "Order": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "product": {
          "$ref": "#/definitions/Product"
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "default": "1"
        }
      },
      "required": [
        "product"
      ]
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "integer",
          "format": "int32",
          "description": "Сan be either 1 or 0. 1 – OK, 0 – NOT OK."
        },
        "*Amount": {
          "type": "integer",
          "format": "int32",
          "description": "Represent amount of received items."
        },
        "message": {
          "type": "string"
        },
        "token": {
          "type": "string",
          "description": "JSON Web Token"
        }
      }
    },
    "Request": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Request type: GET, PATCH, PUT, DELETE or any other"
        },
        "url": {
          "type": "string",
          "description": "Request URL"
        }
      }
    }
  }
}
